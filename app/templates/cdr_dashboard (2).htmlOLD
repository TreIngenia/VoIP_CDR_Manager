<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Categorie CDR - FTP Scheduler</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .category-card {
            transition: transform 0.2s;
            border-left: 4px solid #007bff;
        }
        .category-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .category-inactive {
            border-left-color: #dc3545;
            opacity: 0.7;
        }
        .stats-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
        }
        .conflict-warning {
            border-left: 4px solid #ffc107;
            background-color: #fff3cd;
        }
        .pattern-badge {
            background-color: #e9ecef;
            color: #495057;
            padding: 0.25rem 0.5rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            margin: 0.125rem;
            display: inline-block;
        }
        .price-display {
            font-size: 1.25rem;
            font-weight: bold;
            color: #28a745;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="fas fa-chart-bar"></i> FTP Scheduler - Categorie CDR 2.0
            </a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/"><i class="fas fa-home"></i> Dashboard</a>
                <a class="nav-link" href="/categories"><i class="fas fa-cogs"></i> Gestione Categorie</a>
                <a class="nav-link" href="/cdr_dashboard"><i class="fas fa-chart-line"></i> Report CDR</a>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1><i class="fas fa-tags"></i> Dashboard Categorie CDR</h1>
                    <div>
                        <span class="badge bg-success">Sistema v{{ system_info.version }}</span>
                        {% if system_info.supports_costo_by_category %}
                        <span class="badge bg-info">Costo per Categoria Abilitato</span>
                        {% endif %}
                    </div>
                </div>

                <!-- Statistiche Generali -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card stats-card">
                            <div class="card-body text-center">
                                <i class="fas fa-layer-group fa-2x mb-2"></i>
                                <h4>{{ statistics.total_categories }}</h4>
                                <small>Categorie Totali</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card stats-card">
                            <div class="card-body text-center">
                                <i class="fas fa-check-circle fa-2x mb-2"></i>
                                <h4>{{ statistics.active_categories }}</h4>
                                <small>Categorie Attive</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card stats-card">
                            <div class="card-body text-center">
                                <i class="fas fa-search fa-2x mb-2"></i>
                                <h4>{{ statistics.total_patterns }}</h4>
                                <small>Pattern Totali</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card stats-card">
                            <div class="card-body text-center">
                                <i class="fas fa-euro-sign fa-2x mb-2"></i>
                                <h4>€{{ "%.3f"|format(statistics.price_range.avg) }}</h4>
                                <small>Prezzo Medio/min</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Avvisi Conflitti -->
                {% if conflicts %}
                <div class="alert conflict-warning" role="alert">
                    <h5><i class="fas fa-exclamation-triangle"></i> Conflitti Pattern Rilevati</h5>
                    <p>Sono stati rilevati {{ conflicts|length }} conflitti tra pattern delle categorie:</p>
                    <ul class="mb-0">
                        {% for conflict in conflicts[:3] %}
                        <li>
                            <strong>{{ conflict.category1 }}</strong> vs <strong>{{ conflict.category2 }}</strong>: 
                            {{ conflict.common_patterns|join(', ') }}
                            <span class="badge bg-{{ 'danger' if conflict.severity == 'high' else 'warning' }}">{{ conflict.severity }}</span>
                        </li>
                        {% endfor %}
                        {% if conflicts|length > 3 %}
                        <li><em>... e altri {{ conflicts|length - 3 }} conflitti</em></li>
                        {% endif %}
                    </ul>
                </div>
                {% endif %}

                <!-- Categorie Attive -->
                <div class="row">
                    <div class="col-12">
                        <h3><i class="fas fa-list"></i> Categorie Configurate</h3>
                        <div class="row">
                            {% for name, category in categories.items() %}
                            <div class="col-lg-6 col-xl-4 mb-3">
                                <div class="card category-card {{ 'category-inactive' if not category.is_active }}">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0">
                                            {% if category.is_active %}
                                            <i class="fas fa-check-circle text-success"></i>
                                            {% else %}
                                            <i class="fas fa-times-circle text-danger"></i>
                                            {% endif %}
                                            {{ category.display_name }}
                                        </h6>
                                        <span class="badge bg-secondary">{{ name }}</span>
                                    </div>
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <span class="price-display">€{{ "%.4f"|format(category.price_per_minute) }}/min</span>
                                            <span class="text-muted">{{ category.currency }}</span>
                                        </div>
                                        
                                        {% if category.description %}
                                        <p class="text-muted small mb-2">{{ category.description }}</p>
                                        {% endif %}
                                        
                                        <div class="mb-2">
                                            <small class="text-muted">Pattern ({{ category.patterns|length }}):</small><br>
                                            {% for pattern in category.patterns[:3] %}
                                            <span class="pattern-badge">{{ pattern }}</span>
                                            {% endfor %}
                                            {% if category.patterns|length > 3 %}
                                            <span class="pattern-badge">+{{ category.patterns|length - 3 }} altri</span>
                                            {% endif %}
                                        </div>
                                        
                                        <div class="d-flex justify-content-between text-muted">
                                            <small>Creata: {{ category.created_at[:10] if category.created_at }}</small>
                                            <small>Aggiornata: {{ category.updated_at[:10] if category.updated_at }}</small>
                                        </div>
                                    </div>
                                    <div class="card-footer">
                                        <div class="btn-group btn-group-sm w-100">
                                            <button class="btn btn-outline-primary" onclick="editCategory('{{ name }}')">
                                                <i class="fas fa-edit"></i> Modifica
                                            </button>
                                            <button class="btn btn-outline-info" onclick="testCategory('{{ name }}')">
                                                <i class="fas fa-test-tube"></i> Test
                                            </button>
                                            {% if not category.is_active %}
                                            <button class="btn btn-outline-success" onclick="activateCategory('{{ name }}')">
                                                <i class="fas fa-power-off"></i> Attiva
                                            </button>
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>

                <!-- Report Recenti -->
                {% if recent_reports %}
                <div class="row mt-4">
                    <div class="col-12">
                        <h3><i class="fas fa-file-alt"></i> Report CDR Recenti</h3>
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>File</th>
                                        <th>Tipo</th>
                                        <th>Supporta Categorie</th>
                                        <th>Dimensione</th>
                                        <th>Creato</th>
                                        <th>Azioni</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for report in recent_reports %}
                                    <tr>
                                        <td>
                                            <i class="fas fa-{{ 'chart-pie' if report.is_summary else 'file-alt' }}"></i>
                                            {{ report.filename }}
                                        </td>
                                        <td>
                                            {% if report.is_summary %}
                                            <span class="badge bg-warning">Summary</span>
                                            {% else %}
                                            <span class="badge bg-primary">Contratto</span>
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% if report.get('has_categories', False) or report.get('categories_version') == '2.0' %}
                                            <span class="badge bg-success"><i class="fas fa-check"></i> Sì v2.0</span>
                                            {% else %}
                                            <span class="badge bg-secondary"><i class="fas fa-times"></i> No</span>
                                            {% endif %}
                                        </td>
                                        <td>{{ "%.2f"|format(report.size_bytes / (1024*1024)) }} MB</td>
                                        <td>{{ report.created[:16].replace('T', ' ') }}</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-outline-primary" onclick="viewReport('{{ report.filename }}')">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <a href="/cdr_analytics/reports/{{ report.filename }}" class="btn btn-outline-success">
                                                    <i class="fas fa-download"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                {% endif %}

                <!-- Azioni Rapide -->
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h5><i class="fas fa-tools"></i> Azioni Rapide</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3 mb-2">
                                        <button class="btn btn-primary w-100" onclick="showAddCategoryModal()">
                                            <i class="fas fa-plus"></i> Nuova Categoria
                                        </button>
                                    </div>
                                    <div class="col-md-3 mb-2">
                                        <button class="btn btn-info w-100" onclick="testAllCategories()">
                                            <i class="fas fa-test-tube"></i> Test Categorie
                                        </button>
                                    </div>
                                    <div class="col-md-3 mb-2">
                                        <button class="btn btn-success w-100" onclick="exportCategories()">
                                            <i class="fas fa-download"></i> Esporta
                                        </button>
                                    </div>
                                    <div class="col-md-3 mb-2">
                                        <button class="btn btn-warning w-100" onclick="showImportModal()">
                                            <i class="fas fa-upload"></i> Importa
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Test Categoria -->
    <div class="modal fade" id="testCategoryModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Test Classificazione Categorie</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="testCallTypes" class="form-label">Tipi di Chiamata da Testare</label>
                        <textarea class="form-control" id="testCallTypes" rows="4" 
                                  placeholder="Inserisci i tipi di chiamata, uno per riga">INTERRURBANE URBANE
CELLULARE TIM
FAX NAZIONALE
NUMERO VERDE 800
INTERNAZIONALE FRANCIA</textarea>
                    </div>
                    <div class="mb-3">
                        <label for="testDuration" class="form-label">Durata Test (secondi)</label>
                        <input type="number" class="form-control" id="testDuration" value="300">
                    </div>
                    <div id="testResults"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Chiudi</button>
                    <button type="button" class="btn btn-primary" onclick="runCategoryTest()">
                        <i class="fas fa-play"></i> Esegui Test
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Aggiungi Categoria -->
    <div class="modal fade" id="addCategoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Aggiungi Nuova Categoria</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addCategoryForm">
                        <div class="mb-3">
                            <label for="categoryName" class="form-label">Nome Categoria *</label>
                            <input type="text" class="form-control" id="categoryName" 
                                   placeholder="es. SMS, VIDEOCHIAMATE" required>
                            <div class="form-text">Solo lettere maiuscole e underscore</div>
                        </div>
                        <div class="mb-3">
                            <label for="categoryDisplayName" class="form-label">Nome Visualizzato *</label>
                            <input type="text" class="form-control" id="categoryDisplayName" 
                                   placeholder="es. Servizi SMS" required>
                        </div>
                        <div class="mb-3">
                            <label for="categoryPrice" class="form-label">Prezzo per Minuto (EUR) *</label>
                            <input type="number" class="form-control" id="categoryPrice" 
                                   step="0.0001" min="0" placeholder="0.0500" required>
                        </div>
                        <div class="mb-3">
                            <label for="categoryPatterns" class="form-label">Pattern di Riconoscimento *</label>
                            <textarea class="form-control" id="categoryPatterns" rows="3" 
                                      placeholder="SMS&#10;MESSAGGIO&#10;SHORT MESSAGE" required></textarea>
                            <div class="form-text">Un pattern per riga. Questi testi verranno cercati nei tipi di chiamata.</div>
                        </div>
                        <div class="mb-3">
                            <label for="categoryDescription" class="form-label">Descrizione</label>
                            <textarea class="form-control" id="categoryDescription" rows="2" 
                                      placeholder="Breve descrizione della categoria"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
                    <button type="button" class="btn btn-primary" onclick="saveNewCategory()">
                        <i class="fas fa-save"></i> Salva Categoria
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Importa -->
    <div class="modal fade" id="importModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Importa Categorie</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="importFile" class="form-label">File CSV</label>
                        <input type="file" class="form-control" id="importFile" accept=".csv">
                        <div class="form-text">Seleziona un file CSV con le categorie da importare</div>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="importMerge" checked>
                        <label class="form-check-label" for="importMerge">
                            Merge con categorie esistenti
                        </label>
                        <div class="form-text">Se disabilitato, le categorie esistenti verranno sostituite</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
                    <button type="button" class="btn btn-primary" onclick="importCategories()">
                        <i class="fas fa-upload"></i> Importa
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        // Variabili globali
        let categoriesData = {{ categories | tojsonfilter | safe }};
        
        // Funzioni principali
        function showAddCategoryModal() {
            new bootstrap.Modal(document.getElementById('addCategoryModal')).show();
        }
        
        function showImportModal() {
            new bootstrap.Modal(document.getElementById('importModal')).show();
        }
        
        function saveNewCategory() {
            const form = document.getElementById('addCategoryForm');
            const formData = new FormData(form);
            
            const categoryData = {
                name: document.getElementById('categoryName').value.trim().toUpperCase(),
                display_name: document.getElementById('categoryDisplayName').value.trim(),
                price_per_minute: parseFloat(document.getElementById('categoryPrice').value),
                patterns: document.getElementById('categoryPatterns').value.split('\n')
                    .map(p => p.trim()).filter(p => p),
                description: document.getElementById('categoryDescription').value.trim(),
                currency: 'EUR'
            };
            
            // Validazione client-side
            if (!categoryData.name || !categoryData.display_name || !categoryData.patterns.length) {
                showAlert('warning', 'Attenzione', 'Compila tutti i campi obbligatori');
                return;
            }
            
            if (categoryData.price_per_minute < 0) {
                showAlert('warning', 'Attenzione', 'Il prezzo deve essere positivo');
                return;
            }
            
            // Invia richiesta
            fetch('/api/categories', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(categoryData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert('success', 'Successo', data.message);
                    bootstrap.Modal.getInstance(document.getElementById('addCategoryModal')).hide();
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showAlert('danger', 'Errore', data.message);
                }
            })
            .catch(error => {
                showAlert('danger', 'Errore', 'Errore di rete: ' + error);
            });
        }
        
        function testCategory(categoryName) {
            // Apri modal di test con categoria preselezionata
            document.getElementById('testCallTypes').value = 
                `Test per categoria: ${categoryName}\nINTERURBANE URBANE\nCELLULARE\nFAX`;
            new bootstrap.Modal(document.getElementById('testCategoryModal')).show();
        }
        
        function testAllCategories() {
            // Test con tipi di chiamata vari
            document.getElementById('testCallTypes').value = 
                'INTERRURBANE URBANE\nCELLULARE TIM\nFAX NAZIONALE\nNUMERO VERDE 800\nINTERNAZIONALE FRANCIA\nSMS PREMIUM\nVIDEOCHIAMATA HD';
            new bootstrap.Modal(document.getElementById('testCategoryModal')).show();
        }
        
        function runCategoryTest() {
            const callTypes = document.getElementById('testCallTypes').value
                .split('\n').map(t => t.trim()).filter(t => t);
            const duration = parseInt(document.getElementById('testDuration').value);
            
            if (callTypes.length === 0) {
                showAlert('warning', 'Attenzione', 'Inserisci almeno un tipo di chiamata');
                return;
            }
            
            const testData = {
                call_types: callTypes,
                duration_seconds: duration
            };
            
            // Mostra loading
            document.getElementById('testResults').innerHTML = 
                '<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Test in corso...</div>';
            
            fetch('/api/cdr/test_category_matching', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(testData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    displayTestResults(data.results, data.test_duration_seconds);
                } else {
                    document.getElementById('testResults').innerHTML = 
                        `<div class="alert alert-danger">Errore: ${data.message}</div>`;
                }
            })
            .catch(error => {
                document.getElementById('testResults').innerHTML = 
                    `<div class="alert alert-danger">Errore di rete: ${error}</div>`;
            });
        }
        
        function displayTestResults(results, duration) {
            let html = `<div class="alert alert-info">
                <strong>Risultati Test (${duration} secondi di durata):</strong>
            </div>
            <div class="table-responsive">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>Tipo Chiamata</th>
                            <th>Categoria</th>
                            <th>Match</th>
                            <th>Prezzo/min</th>
                            <th>Costo Test</th>
                        </tr>
                    </thead>
                    <tbody>`;
            
            results.forEach(result => {
                const matchIcon = result.matched ? 
                    '<i class="fas fa-check text-success"></i>' : 
                    '<i class="fas fa-times text-danger"></i>';
                
                const categoryClass = result.matched ? 'table-success' : 'table-warning';
                
                html += `<tr class="${categoryClass}">
                    <td><code>${result.call_type}</code></td>
                    <td>
                        <strong>${result.category_display}</strong>
                        <br><small class="text-muted">${result.category_name}</small>
                    </td>
                    <td>${matchIcon}</td>
                    <td>€${result.price_per_minute.toFixed(4)}</td>
                    <td>
                        <strong>€${result.cost_calculated.toFixed(4)}</strong>
                        <br><small>${result.duration_billed.toFixed(2)} ${result.unit_label}</small>
                    </td>
                </tr>`;
            });
            
            html += '</tbody></table></div>';
            
            // Statistiche riassuntive
            const matched = results.filter(r => r.matched).length;
            const totalCost = results.reduce((sum, r) => sum + r.cost_calculated, 0);
            
            html += `<div class="row mt-3">
                <div class="col-md-4">
                    <div class="card text-center">
                        <div class="card-body">
                            <h5>${matched}/${results.length}</h5>
                            <small>Match Rate</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center">
                        <div class="card-body">
                            <h5>€${totalCost.toFixed(4)}</h5>
                            <small>Costo Totale</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center">
                        <div class="card-body">
                            <h5>${((matched/results.length)*100).toFixed(1)}%</h5>
                            <small>Percentuale Match</small>
                        </div>
                    </div>
                </div>
            </div>`;
            
            document.getElementById('testResults').innerHTML = html;
        }
        
        function editCategory(categoryName) {
            // Reindirizza alla pagina di gestione categorie
            window.location.href = `/categories?edit=${categoryName}`;
        }
        
        function activateCategory(categoryName) {
            if (confirm(`Attivare la categoria ${categoryName}?`)) {
                fetch(`/api/categories/${categoryName}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({is_active: true})
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert('success', 'Successo', data.message);
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showAlert('danger', 'Errore', data.message);
                    }
                })
                .catch(error => {
                    showAlert('danger', 'Errore', 'Errore di rete: ' + error);
                });
            }
        }
        
        function exportCategories() {
            window.open('/api/categories/export-csv', '_blank');
        }
        
        function importCategories() {
            const fileInput = document.getElementById('importFile');
            const mergeCheckbox = document.getElementById('importMerge');
            
            if (!fileInput.files.length) {
                showAlert('warning', 'Attenzione', 'Seleziona un file CSV');
                return;
            }
            
            const formData = new FormData();
            formData.append('file', fileInput.files[0]);
            formData.append('merge', mergeCheckbox.checked ? 'true' : 'false');
            
            fetch('/api/categories/import-csv', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert('success', 'Successo', data.message);
                    bootstrap.Modal.getInstance(document.getElementById('importModal')).hide();
                    setTimeout(() => location.reload(), 2000);
                } else {
                    showAlert('danger', 'Errore', data.message);
                    if (data.errors && data.errors.length > 0) {
                        console.log('Errori importazione:', data.errors);
                    }
                }
            })
            .catch(error => {
                showAlert('danger', 'Errore', 'Errore di rete: ' + error);
            });
        }
        
        function viewReport(filename) {
            // Apri dettagli report in nuova finestra
            window.open(`/cdr_analytics/report_details/${filename}`, '_blank');
        }
        
        function showAlert(type, title, message) {
            // Crea e mostra alert Bootstrap
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show position-fixed" 
                     style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;" role="alert">
                    <strong>${title}:</strong> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>`;
            
            document.body.insertAdjacentHTML('beforeend', alertHtml);
            
            // Auto-rimuovi dopo 5 secondi
            setTimeout(() => {
                const alerts = document.querySelectorAll('.alert');
                if (alerts.length > 0) {
                    alerts[alerts.length - 1].remove();
                }
            }, 5000);
        }
        
        // Inizializzazione pagina
        document.addEventListener('DOMContentLoaded', function() {
            // Aggiorna timestamp
            const now = new Date();
            console.log('Dashboard Categorie CDR caricata:', now.toLocaleString());
            
            // Controlla conflitti e mostra notifiche
            {% if conflicts %}
            if ({{ conflicts|length }} > 0) {
                console.warn('Conflitti pattern rilevati:', {{ conflicts|length }});
            }
            {% endif %}
        });
    </script>
</body>
</html>